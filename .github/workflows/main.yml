name: PipelineAS1

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch: 

jobs:
  build-job:
      runs-on: docker:latest 
      steps:
        - name: Checkout code
          uses: actions/checkout@v3 
        - name: Login to Docker Hub
          uses: docker/login-action@v2 
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Build and push Docker image
          run: |
            docker build -t ${{ secrets.DOCKER_USERNAME }}/${{secrets.DOCKER_IMAGE}}:${{secrets.TAG}} .
            if [ -n "${{ secrets.DOCKER_USERNAME }}" ]; then
              docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
              docker push ${{ secrets.DOCKER_USERNAME }}/${{secrets.DOCKER_IMAGE}}:${{secrets.TAG}}

  security-test: # SAST
      runs-on: ubuntu-latest
      needs: [build-job]
      name: eslint-scan
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
        - name: Use Node.js 16
          uses: actions/setup-node@v3
          with: 
            node-version: 16
        - name: Install dependencies
          run: npm install
        - name: Install ESLint and security plugin
          run: npm install --save-dev eslint eslint-plugin-security
        - name: Run ESLint scan
          run: npm run lint 
            

  deploy-job:
    runs-on: ubuntu-latest
    needs: [build-job, security-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Pull Docker image
        run: docker pull ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_IMAGE}}:${{secrets.TAG}}
      - name: Run Docker container with ngrok
        run: |
          docker run -d -p 8080:80 ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_IMAGE}}:${{secrets.TAG}}
          docker exec -it <container_id> bash -c "curl -s https://download.ngrok.com/ngrok-stable-linux-amd64.zip > ngrok.zip && unzip ngrok.zip && chmod +x ./ngrok && ./ngrok http 8080"
          echo "**Aplicação acessivel em:** $(docker exec -it <container_id> ./ngrok print)"